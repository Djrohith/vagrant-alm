---
# requirements install
#- name: Install Roles from Galaxy
#  hosts: all
#  connection: local
#  tasks:
#    - name: installing required ansible-galaxy roles
#      command: "ansible-galaxy install --ignore-errors -r requirements.yml"

# Let's rock on ALM
- name: yum update packages
  hosts: jenkins_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes

  roles:
    - linuxupdate.packages

- name: yum update packages
  hosts: sonar_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes

  roles:
    - linuxupdate.packages

- name: yum update packages
  hosts: app_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes

  roles:
    - linuxupdate.packages

- name: Deploy Jenkins CI
  hosts: jenkins_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes

  roles:
    - geerlingguy.repo-epel
    - geerlingguy.jenkins
    - geerlingguy.git
    - tecris.maven
    - geerlingguy.ansible

- name: jenkins copy-key from master
  hosts: jenkins_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes
  tasks:
    - name: copy
      copy:
       src: /root/Ansible-Automation/aws-private.pem
       dest: /root/aws-private.pem
       owner: jenkins
       group: jenkins
       mode: 0700

- name: jenkins pipeline configuration
  hosts: jenkins_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes
  tasks:
    - name: Creates directory
      file:
       path: /var/lib/jenkins/jobs/petclinic/
       state: directory
       owner: jenkins
       group: jenkins
       mode: 0700
    - name: copy
      copy:
       src: config.xml
       dest: /var/lib/jenkins/jobs/petclinic/config.xml
       owner: jenkins
       group: jenkins
       mode: 0700
 


- name: jenkins pipeline Credentials configuration
  hosts: jenkins_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes
  tasks:
    - name: copy
      copy:
       src: credentials.xml
       dest: /var/lib/jenkins/credentials.xml
       owner: jenkins
       group: jenkins
       mode: 0700



- name: jenkins pipeline plugin configuration
  hosts: jenkins_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes
  tasks:
    - name: Adding Plugin
      jenkins_plugin:
          name: "{{ item }}"
          url_username: admin
          url_password: admin123
          url: http://localhost:8080
      with_items:
           - quality-gates
           - nexus-jenkins-plugin
           - sonar-quality-gates
      tags: ['skip_ansible_lint']
      register: plugin_result
      until: plugin_result is success
      retries: 3
      delay: 2

- name: jenkins restart server
  hosts: jenkins_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes
  tasks:
    - name: Restart Jenkins to make the plugin data available
      service: name=jenkins state=restarted
    - name: Wait for Jenkins to restart
      wait_for:
          host=localhost
          port=8080
          delay=20
          timeout=300

- name: jenkins server sshd permissions
  hosts: jenkins_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes
  tasks: 
    - name: sshd PermitRootLogin set to '{{ sshd_PermitRootLogin }}'
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin {{ sshd_PermitRootLogin }}'
        validate: 'sshd -t -f %s'
      notify: restart ssh service
      when: sshd_PermitRootLogin is defined
    - name: sshd PasswordAuthentication set to '{{ sshd_PasswordAuthentication }}'
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication {{ sshd_PasswordAuthentication }}'
        validate: 'sshd -t -f %s'
      notify: restart ssh service
      when: sshd_PasswordAuthentication is defined

- name: Deploy Nexus Server
  hosts: nexus_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes

  roles:
    - geerlingguy.java
    - dockpack.nexus

- name: Deploy Sonar Server
  hosts: sonar_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes

  roles:
    - wtanaka.unzip
    - zanini.sonar

#- name: Deploy rundeck Server
#  hosts: app_server
#  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
#  become: yes

#  roles:
#    - robertdebock.bootstrap
#    - robertdebock.java
#    - robertdebock.service
#    - robertdebock.rundeck 

- name: application server sshd permissions
  hosts: app_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes
  tasks:
    - name: sshd PermitRootLogin set to '{{ sshd_PermitRootLogin }}'
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin {{ sshd_PermitRootLogin }}'
        validate: 'sshd -t -f %s'
      notify: restart ssh service
      when: sshd_PermitRootLogin is defined
    - name: sshd PasswordAuthentication set to '{{ sshd_PasswordAuthentication }}'
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication {{ sshd_PasswordAuthentication }}'
        validate: 'sshd -t -f %s'
      notify: restart ssh service
      when: sshd_PasswordAuthentication is defined

- name: On Premises CentOS
  hosts: app_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes

  roles:
    - jenkins-keys-config
      
    
